(extern-proc putchar (-> UInt8 Int32))
(extern-proc eq-int8 (-> (Cons UInt8 UInt8) Bool))
(extern-proc add-int8 (-> (Cons UInt8 UInt8) UInt8))
(extern-proc sub-int8 (-> (Cons UInt8 UInt8) UInt8))

(define ascii-0 48)

(define print-offset
  (lambda (offset base)
    (begin
      (set base (add-int8 (cons base offset)))
      (putchar base)
      (putchar 10)
      0)))

(define print-n
  (lambda (n)
    (let ((base ascii-0)
          (offset n))
      (print-offset offset base))))

(define print-n-to-0
  (lambda (n)
    (if (eq-int8 (cons n 0))
        (print-n 0)
        (begin (print-n n)
               (print-n-to-0 (sub-int8 (cons n 1)))))))

(define main
  (lambda ()
    (print-n-to-0 9)))
